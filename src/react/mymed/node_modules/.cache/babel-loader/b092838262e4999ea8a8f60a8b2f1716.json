{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miki\\\\Desktop\\\\MedSpringReact\\\\src\\\\main\\\\webapp\\\\WEB-INF\\\\react\\\\mymed\\\\src\\\\components\\\\pages\\\\interactiveTable\\\\fieldTable.js\";\nimport React from 'react'; //import axios from 'axios';\n\nimport styles from '../../Main.module.css';\nimport './fieldTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FieldTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tableElems = [];\n    this.controlElems = [];\n    this.keyCounter = 0;\n    this.addImg = '/static/images/icoNotes/add.png';\n    this.removeImg = '/static/images/icoNotes/remove.png';\n    this.arrowUpImg = '/static/images/icoNotes/arrowUp.png';\n    this.arrowDnImg = '/static/images/icoNotes/arrowDn.png';\n    this.arrowImg = '/static/images/icoNotes/arrow.png';\n\n    this.addRow = () => {\n      this.tableElems.push(this.addEditableRow('Jil', 'Smith', '50'));\n      this.addControlRow();\n      this.forceUpdate();\n    };\n\n    this.editField = event => {\n      let span = event.target;\n      let textarea = event.target.parentNode.lastElementChild;\n      span.classList.add('noDisplay');\n      textarea.value = span.textContent;\n      textarea.classList.remove('noDisplay');\n    };\n\n    this.closeEditor = event => {\n      let span = event.target.parentNode.firstElementChild;\n      let textarea = event.target;\n      textarea.classList.add('noDisplay');\n      span.textContent = textarea.value;\n      span.classList.remove('noDisplay');\n    };\n\n    this.removeRow = event => {\n      console.log(event.parentNode.parentNode);\n    };\n\n    this.placeholder = event => {};\n\n    this.tableElems = [];\n    this.tableElems.push(this.addEditableRow('Jill', 'Smith', '50'));\n    this.tableElems.push(this.addEditableRow('Eve', 'Jackson', '94'));\n\n    for (let row of this.tableElems) {\n      this.addControlRow();\n    }\n  }\n\n  componentDidMount() {}\n\n  addEditableRow(text1, text2, text3) {\n    this.keyCounter = this.keyCounter + 1;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [this.addEditableCell(text1), this.addEditableCell(text2), this.addEditableCell(text3)]\n    }, this.keyCounter, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n  addEditableCell(text) {\n    this.keyCounter = this.keyCounter + 1;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.editField,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        onBlur: this.closeEditor,\n        placeholder: \"lorem\",\n        className: \"noDisplay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, this.keyCounter, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  addControlRow() {\n    this.keyCounter = this.keyCounter + 1;\n    this.controlElems.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [this.addControlField(this.removeImg, 'rmIcon icon', this.removeRow, 'remove'), this.addControlField(this.arrowUpImg, 'icon', this.placeholder, 'move up'), this.addControlField(this.arrowDnImg, 'icon', this.placeholder, 'move down')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this));\n  }\n\n  addControlField(src, clsName, action, alt) {\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        class: clsName,\n        onClick: action,\n        alt: alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let table = /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"editable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.tableElems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n\n    let controls = /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.controlElems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n\n    let addRow = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"newRow\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.addImg,\n        className: \"addRow\",\n        onClick: this.addRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"tableParent\",\n      children: [table, controls, addRow]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FieldTable;","map":{"version":3,"sources":["C:/Users/Miki/Desktop/MedSpringReact/src/main/webapp/WEB-INF/react/mymed/src/components/pages/interactiveTable/fieldTable.js"],"names":["React","styles","FieldTable","Component","constructor","props","tableElems","controlElems","keyCounter","addImg","removeImg","arrowUpImg","arrowDnImg","arrowImg","addRow","push","addEditableRow","addControlRow","forceUpdate","editField","event","span","target","textarea","parentNode","lastElementChild","classList","add","value","textContent","remove","closeEditor","firstElementChild","removeRow","console","log","placeholder","row","componentDidMount","text1","text2","text3","addEditableCell","text","addControlField","src","clsName","action","alt","render","table","controls"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import axios from 'axios';\r\n\r\nimport styles from '../../Main.module.css';\r\nimport './fieldTable.css';\r\n\r\nclass FieldTable extends React.Component {\r\n\r\n    tableElems = [];\r\n    controlElems = [];\r\n    keyCounter = 0;\r\n\r\n    addImg = '/static/images/icoNotes/add.png';\r\n    removeImg = '/static/images/icoNotes/remove.png';\r\n    arrowUpImg = '/static/images/icoNotes/arrowUp.png';\r\n    arrowDnImg = '/static/images/icoNotes/arrowDn.png';\r\n    arrowImg = '/static/images/icoNotes/arrow.png';\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.tableElems = [];\r\n        this.tableElems.push(this.addEditableRow('Jill', 'Smith', '50'));\r\n        this.tableElems.push(this.addEditableRow('Eve', 'Jackson', '94'));\r\n\r\n        for (let row of this.tableElems){\r\n            this.addControlRow();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    addEditableRow(text1, text2, text3){\r\n        this.keyCounter = this.keyCounter + 1;\r\n        return (\r\n            <tr key={this.keyCounter}>\r\n                {this.addEditableCell(text1)}\r\n                {this.addEditableCell(text2)}\r\n                {this.addEditableCell(text3)}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    addEditableCell(text){\r\n        this.keyCounter = this.keyCounter + 1;\r\n        return(\r\n            <td key={this.keyCounter}>\r\n                <span onClick={this.editField}>{text}</span>\r\n                <textarea type='text' onBlur={this.closeEditor} placeholder='lorem' className='noDisplay' />\r\n            </td>\r\n        )\r\n    }\r\n\r\n    addControlRow(){\r\n        this.keyCounter = this.keyCounter + 1;\r\n        this.controlElems.push(\r\n            <tr>\r\n                {this.addControlField(this.removeImg, 'rmIcon icon', this.removeRow, 'remove')}\r\n                {this.addControlField(this.arrowUpImg, 'icon', this.placeholder, 'move up')}\r\n                {this.addControlField(this.arrowDnImg, 'icon', this.placeholder, 'move down')}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    addControlField(src, clsName, action, alt){\r\n        return(\r\n            <td>\r\n                <img src={src} class={clsName} onClick={action} alt={alt} />\r\n            </td>\r\n        )\r\n    }\r\n\r\n    addRow = () => {\r\n        this.tableElems.push(this.addEditableRow('Jil', 'Smith', '50'));\r\n        this.addControlRow();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    editField = event => {\r\n        let span = event.target;\r\n        let textarea = event.target.parentNode.lastElementChild;\r\n\r\n        span.classList.add('noDisplay');\r\n        textarea.value = span.textContent;\r\n        textarea.classList.remove('noDisplay');\r\n    }\r\n\r\n    closeEditor = event => {\r\n        let span = event.target.parentNode.firstElementChild;\r\n        let textarea = event.target;\r\n\r\n        textarea.classList.add('noDisplay');\r\n        span.textContent = textarea.value;\r\n        span.classList.remove('noDisplay');\r\n    }\r\n\r\n    removeRow = event => {\r\n        console.log(event.parentNode.parentNode);\r\n\r\n    }\r\n\r\n    placeholder = event => {\r\n    }\r\n\r\n    render() {\r\n        let table =\r\n            <table id='editable'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Firstname</th>\r\n                        <th>Lastname</th>\r\n                        <th>Age</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.tableElems}\r\n                </tbody>\r\n            </table>\r\n\r\n        let controls =\r\n            <table id='controls'>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='empty' />\r\n                        <th className='empty' />\r\n                        <th className='empty' />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.controlElems}\r\n                </tbody>\r\n            </table>\r\n\r\n        let addRow =\r\n            <div id='newRow'>\r\n                <img src={this.addImg} className='addRow' onClick={this.addRow} />\r\n            </div>\r\n\r\n        return (\r\n            <div id='tableParent'>\r\n                {table}\r\n                {controls}\r\n                {addRow}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FieldTable;"]},"metadata":{},"sourceType":"module"}